/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define AS(keycode) &as LS(keycode) keycode

/ {
      behaviors {
            as: auto_shift {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping_term_ms = <135>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };

            hello_macro: macro_hello {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings = <
                    &macro_tap
                        &kp H
                        &kp E
                        &kp L
                        &kp L
                        &kp O
                >;
            };

//        SEND_STRING("root\n");
//        SEND_STRING("tail -F /var/log/logfile1.txt ");
//        SEND_STRING("HanCommsManagerCli get-status\n");
            pass_macro: macro_pass {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings = <
                    &macro_tap
                        &kp M
                        &kp A
                        &kp R
                        &kp N0
                        &kp N4
                        &kp B
                        &kp I
                        &kp R
                        &kp RET
                >;
            };

            log_macro: macro_log {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings = <
                    &macro_tap
                        &kp T
                        &kp A
                        &kp I
                        &kp L
                        &kp SPACE
                        &kp MINUS
                        &kp LS(F)
                        &kp SPACE
                        &kp SLASH
                        &kp V
                        &kp A
                        &kp R
                        &kp SLASH
                        &kp L
                        &kp O
                        &kp G
                        &kp SLASH
                        &kp L
                        &kp O
                        &kp G
                        &kp F
                        &kp I
                        &kp L
                        &kp E
                        &kp N1
                        &kp DOT
                        &kp T
                        &kp X
                        &kp T
                        &kp SPACE
                >;
            };


        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "Default Layer";
                        bindings = <
   &trans AS(Q) AS(W) AS(E) AS(R) AS(T)             AS(Y) AS(U)  AS(I)     AS(O)   AS(P)    &trans
   &trans AS(A) &mt LSHIFT S AS(D) &lt 3 F AS(G)    &kp H &kp J  &kp K     &kp L   &kp SEMI &trans
   &trans AS(Z) AS(X) &kp C AS(V) AS(B)             AS(N) AS(M)  &kp COMMA &kp DOT &kp FSLH &trans
                  &lt 4 BSPC &mt LALT N2 &kp ESC         &kp RET &mt RCTRL N3 &kp SPACE
                        >;
                };
                lower_layer {
                        display-name = "Lower Layer";
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
                        display-name = "Raise Layer";
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &pass_macro    &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans       &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans       &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE    &kp RET   &trans    &kp RALT
                        >;
                };

                number_layer {
                        display-name = "Number Layer";
                        bindings = <
   &trans &trans &trans &trans &trans &trans         &log_macro  &kp N7 &kp N8 &kp N9 &trans &trans
   &trans &trans &trans &trans &trans &trans         &kp SQT &kp N4 &kp N5 &kp N6 &kp DOT   &trans
   &trans &trans &trans &trans &trans &trans         &kp N0  &kp N1 &kp N2 &kp N3 &trans &trans
                        &trans &trans &trans       &kp COLON   &kp LBKT    &kp RBKT
                        >;
                };

                function_layer {
                        display-name = "Function Layer";
                        bindings = <
   &trans &trans &trans &trans &trans &trans         &trans  &kp F7 &kp F8 &kp F9 &kp F10 &trans
   &trans &trans &trans &trans &trans &trans         &kp SQT &kp F4 &kp F5 &kp F6 &kp F11 &trans
   &trans &trans &trans &trans &trans &trans         &kp N0  &kp F1 &kp F2 &kp F3 &kp F12 &trans
                        &trans &trans &trans       &kp COLON   &kp LPAR    &kp RPAR
                        >;
                };
        };


    combos {
        compatible = "zmk,combos";

        bt_clear {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&bt BT_CLR>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp TAB>;
        };

        combo_gui {
            timeout-ms = <50>;
            key-positions = <18 19>;         // E + R
            bindings = <&kp LGUI>;
        };
    };


};
